[개발환경 셋팅 ver241116]


- npm creat vite app 
- npm run dev
- CSS : styled-components
- npm ci 로 한번에 진행 가능..
- 슬라이드: swiper


사용 라이브러리________________________________________________________


CSS 관련 라이브러리

Material-UI: 다양한 컴포넌트와 반응형 지원
Framer Motion: 애니메이션 활용
React Query: 데이터 패칭, 캐싱, 동기화와 서버 상태 관리에 특화

Styled-components:CSS-in-JS 패턴 학습 및 컴포넌트 스타일링 개선
TypeScript :타입 안전성을 높임 


메모리 업데이트됨
학습적 목표를 바탕으로 다음과 같은 React 라이브러리와 기술들을 추천할게. 각 추천 이유도 함께 설명할게.

1. 다양한 React 라이브러리 경험
라이브러리 추천:
Material-UI (MUI):

이유: 인기 있는 React UI 라이브러리로, 풍부한 컴포넌트와 반응형 디자인 지원.
학습 효과: UI 컴포넌트의 효율적 활용 및 커스터마이징 경험.
Framer Motion:

이유: React 애니메이션 라이브러리로, 부드럽고 직관적인 애니메이션 제공.
학습 효과: 사용자 경험 향상을 위한 인터랙션 디자인 학습.
React Query:

이유: 데이터 패칭, 캐싱, 동기화와 서버 상태 관리에 특화.
학습 효과: 클라이언트와 서버 간의 데이터 관리 패턴 이해.
2. 혼자서 백엔드까지 연결
라이브러리 추천:
Axios:

이유: API 요청 및 응답 관리에 직관적이며 널리 사용됨.
학습 효과: RESTful API와의 상호작용 및 에러 처리 패턴 이해.
Redux Toolkit:

이유: 상태 관리를 단순화하고 Redux를 효율적으로 사용할 수 있게 도움.
학습 효과: 상태 관리의 구조화 및 백엔드 데이터 연결 패턴 학습.
Express.js (백엔드):

이유: Node.js 기반으로 간단하면서도 강력한 서버 구축 가능.
학습 효과: 간단한 백엔드 서버 구축 및 API 설계.

4. SNS 로그인 기능 구현
라이브러리 추천:
react-oauth/google:

이유: Google 로그인 구현에 특화되어 사용법이 간단.
학습 효과: OAuth 2.0 기반 로그인 로직 구현.
NextAuth.js:

이유: 다양한 SNS 로그인 옵션(Google, Facebook, Kakao 등) 제공.
학습 효과: 다양한 OAuth 로그인 경험.
Passport.js (백엔드):

이유: SNS 인증을 위한 Node.js 미들웨어.
학습 효과: 백엔드에서 SNS 인증 흐름 학습.

이동: React Router